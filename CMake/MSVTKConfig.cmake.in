#-----------------------------------------------------------------------------
#
# MSVTKConfig.cmake - MSVTK CMake configuration file for external projects.
#
# This file is configured by MSVTK and used by the UseMSVTK.cmake module
# to load VTK's settings for an external project.
@MSVTK_CONFIG_INSTALL_ONLY@

# The set of VTK libraries
SET(MSVTK_LIBRARIES "@MSVTK_Libs_LIBRARIES@")

# The VTK include file directories.
SET(MSVTK_INCLUDE_DIRS "@MSVTK_Libs_INCLUDE_DIRS@")

# The VTK library directories.
SET(MSVTK_LIBRARY_DIRS "@MSVTK_CMAKE_LIBRARY_OUTPUT_DIRECTORY@")

# The VTK binary executable directories.  Note that if
# VTK_CONFIGURATION_TYPES is set (see below) then these directories
# will be the parent directories under which there will be a directory
# of runtime binaries for each configuration type.
SET(MSVTK_EXECUTABLE_DIRS "@MSVTK_CMAKE_RUNTIME_OUTPUT_DIRECTORY@")

# The MSVTK runtime library directories.  
SET(MSVTK_RUNTIME_LIBRARY_DIRS "@MSVTK_CMAKE_RUNTIME_OUTPUT_DIRECTORY@")

# The runtime library path variable name e.g. LD_LIBRARY_PATH,
# this environment variable should be set to VTK_RUNTIME_LIBRARY_DIRS
SET(MSVTK_RUNTIME_PATH_VAR_NAME "@SHARED_LIBRARY_PATH_VAR_NAME@")

# The C and C++ flags added by VTK to the cmake-configured flags.
SET(MSVTK_REQUIRED_C_FLAGS "@MSVTK_REQUIRED_C_FLAGS@")
SET(MSVTK_REQUIRED_CXX_FLAGS "@MSVTK_REQUIRED_CXX_FLAGS@")
SET(MSVTK_REQUIRED_EXE_LINKER_FLAGS "@MSVTK_REQUIRED_EXE_LINKER_FLAGS@")
SET(MSVTK_REQUIRED_SHARED_LINKER_FLAGS "@MSVTK_REQUIRED_SHARED_LINKER_FLAGS@")
SET(MSVTK_REQUIRED_MODULE_LINKER_FLAGS "@MSVTK_REQUIRED_MODULE_LINKER_FLAGS@")

# The location of the UseVTK.cmake file.
SET(MSVTK_USE_FILE "@MSVTK_USE_FILE@")

# Relative install paths in the VTK install tree
SET(MSVTK_INSTALL_BIN_DIR "@MSVTK_INSTALL_BIN_DIR@")
SET(MSVTK_INSTALL_INCLUDE_DIR "@MSVTK_INSTALL_INCLUDE_DIR@")
SET(MSVTK_INSTALL_LIB_DIR "@MSVTK_INSTALL_LIB_DIR@")
SET(MSVTK_INSTALL_PACKAGE_DIR "@MSVTK_INSTALL_PACKAGE_DIR@")

SET(MSVTK_CTK_DIR "@CTK_DIR@")
SET(MSVTK_VTK_DIR "@VTK_DIR@")
SET(MSVTK_QT_QMAKE_EXECUTABLE  "@QT_QMAKE_EXECUTABLE@")
