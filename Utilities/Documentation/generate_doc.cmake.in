###########################################################################
#
#  Library: MSVTK
#
#  Copyright (c) Kitware Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0.txt
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
###########################################################################

# PROJECT_NAME:
# Documentation/project name. Used in some of the resulting file names and
# xrefs to uniquify two or more projects linked together through their
# Doxygen's tag files. Mandatory for each documentation set.
# Note: might be the same as the doxyfile's PROJECT_NAME
# Example:
#   PROJECT_NAME=MSVTK
#
set(PROJECT_NAME "@PROJECT_NAME@")

# OUTPUT_DIRECTORY:
# Path to the Doxygen output directory (where the resulting doc is stored).
# Note: should be the same as your doxyfile's OUTPUT_DIRECTORY
# Example:
#   OUTPUT_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
#
set(OUTPUT_DIRECTORY "@CMAKE_CURRENT_BINARY_DIR@")

# INTERMEDIATE_DOX_DIR:
# Directory where the intermediate Doxygen files should be stored (mainly
# these headers files converted from the VTK format to the Doxygen format).
# This directory is erased at the end of this script, unless you comment
# the corresponding line.
# DOXTEMP might be used to simplify the syntax.
# Example:
#   DOXTEMP=DOXTEMP=@VTK_BINARY_DIR@/Utilities/Doxygen
#   INTERMEDIATE_DOX_DIR=$DOXTEMP/dox
#
set(DOXTEMP "@CMAKE_CURRENT_BINARY_DIR@")
set(INTERMEDIATE_DOX_DIR "${DOXTEMP}/dox")

# SOURCE_DIR:
# Source directory. The top directory of the source files.
# Example:
#   SOURCE_DIR=@VTK_SOURCE_DIR@
#
set(SOURCE_DIR "@PROJECT_SOURCE_DIR@")

# REL_PATH_TO_TOP:
# Relative path from the top directory of the source files to the directory
# (or top directory) holding the files to document. Useful if several parts
# of the same source directory should be documented separately.
# Example:
#   REL_PATH_TO_TOP=.
#   REL_PATH_TO_TOP=framework/src
set(REL_PATH_TO_TOP "Libs/VTK")

# ----------------------------------------------------------------------------
# SOURCE_DIRECTORIES
#
# This list is processed by several perl scripts below. Keeping it in one
# list avoids the possiblity that multiple lists might get out of sync with
# rushed edits...
#
set(SOURCE_DIRECTORIES
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/Charts"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/Chemistry"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/Common"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/Filtering"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/GenericFiltering"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/GenericFiltering/Testing/Cxx"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/Geovis"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/Graphics"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/GUISupport/MFC"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/GUISupport/Qt"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/Hybrid"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/Imaging"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/Infovis"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/IO"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/Parallel"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/Rendering"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/TextAnalysis"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/Views"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/VolumeRendering"
  "${SOURCE_DIR}/${REL_PATH_TO_TOP}/Widgets"
)

# ----------------------------------------------------------------------------
# Convert the VTK headers to the Doxygen format.

set(PATH_TO_VTK_DOX_SCRIPTS "@CMAKE_CURRENT_SOURCE_DIR@")
execute_process(COMMAND ${PERL}
  "${PATH_TO_VTK_DOX_SCRIPTS}/doc_header2doxygen.pl"
  --to "${INTERMEDIATE_DOX_DIR}"
  --relativeto "${SOURCE_DIR}"
  -v
  ${SOURCE_DIRECTORIES}
  RESULT_VARIABLE rv
)

# ----------------------------------------------------------------------------
# Generate documentation

execute_process(
  COMMAND "@DOXYGEN_EXECUTABLE@" "${OUTPUT_DIRECTORY}/UserDoxyfile.txt"
  WORKING_DIRECTORY ${OUTPUT_DIRECTORY}
  RESULT_VARIABLE rv
  )

if(rv)
  message(FATAL_ERROR "error: Failed to generate documentation")
endif()

# ----------------------------------------------------------------------------
# Create the *.tar.gz file


# DOCUMENTATION_ARCHIVES_OUTPUT_DIRECTORY:
# Path to the Doxygen output directory (where the resulting archive(s) should be stored).
# Example:
#   DOCUMENTATION_ARCHIVES_OUTPUT_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@
#
set(DOCUMENTATION_ARCHIVES_OUTPUT_DIRECTORY "@DOCUMENTATION_ARCHIVES_OUTPUT_DIRECTORY@")

# CREATE_HTML_TARZ_ARCHIVE RESULTING_HTML_TARZ_ARCHIVE_FILE:
# Create a compressed (gzip) tar archive of the html directory (located
# under the DOCUMENTATION_ARCHIVES_OUTPUT_DIRECTORY), and name of the resulting archive file.
# Note: your doxyfile should be configured to enable HTML creation
#       (using GENERATE_HTML   YES)
# Example:
#   CREATE_HTML_TARZ_ARCHIVE ON
#   RESULTING_HTML_TARZ_ARCHIVE_FILE ${OUTPUT_DIRECTORY}/${PROJECT_NAME}-html.tar.gz
#
set(CREATE_HTML_TARZ_ARCHIVE @MSVTK_DOCUMENTATION_HTML_TARZ@)
set(SUFFIX "-html")
set(IS_RELEASE @MSVTK_VERSION_TWEAK@)
if (IS_RELEASE)
  set(SUFFIX "-@MSVTK_VERSION@${SUFFIX}")
endif()
set(RESULTING_HTML_TARZ_ARCHIVE_FILE "${DOCUMENTATION_ARCHIVES_OUTPUT_DIRECTORY}/${PROJECT_NAME}${SUFFIX}.tar.gz")

#step(1 "build *.tar.gz file")
if(CREATE_HTML_TARZ_ARCHIVE)
  if(NOT RESULTING_HTML_TARZ_ARCHIVE_FILE STREQUAL "")
    file(REMOVE "RESULTING_HTML_TARZ_ARCHIVE_FILE")
    execute_process(COMMAND ${CMAKE_COMMAND} -E tar cfz ${RESULTING_HTML_TARZ_ARCHIVE_FILE} html
      WORKING_DIRECTORY ${OUTPUT_DIRECTORY}
      RESULT_VARIABLE rv
      )
    if(EXISTS "${RESULTING_HTML_TARZ_ARCHIVE_FILE}")
      message(STATUS "info: created '${RESULTING_HTML_TARZ_ARCHIVE_FILE}'")
    else()
      message(STATUS "warning: could not create '${RESULTING_HTML_TARZ_ARCHIVE_FILE}'")
    endif()
  endif()
endif()
